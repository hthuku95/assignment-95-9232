content='version: \'3.8\'\n\nservices:\n  chroma:\n    image: chromadb/chroma:latest\n    container_name: tutor_space_chroma\n    ports:\n      - "8000:8000"\n    volumes:\n      - chroma_data:/chroma/chroma\n    environment:\n      - CHROMA_SERVER_HOST=0.0.0.0\n      - CHROMA_SERVER_HTTP_PORT=8000\n      - CHROMA_SERVER_CORS_ALLOW_ORIGINS=["*"]\n      - CHROMA_SERVER_AUTH_PROVIDER=chromadb.auth.basic.BasicAuthServerProvider\n      - CHROMA_SERVER_AUTH_CREDENTIALS_FILE=/chroma/server.htpasswd\n      - CHROMA_SERVER_AUTH_CREDENTIALS=admin:$2b$12$5K8g8ZJ9XQ7YvZ1mK3nP2O8vX4wQ9rL6tE2sA3cB7nM9pR5qT8uV\n    command: uvicorn chromadb.app:app --host 0.0.0.0 --port 8000 --log-level info\n    healthcheck:\n      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]\n      interval: 30s\n      timeout: 10s\n      retries: 3\n      start_period: 40s\n    restart: unless-stopped\n    networks:\n      - tutor_network\n\n  app:\n    build:\n      context: .\n      dockerfile: Dockerfile\n    container_name: tutor_space_app\n    ports:\n      - "5000:5000"\n    environment:\n      - FLASK_ENV=production\n      - FLASK_APP=app.py\n      - CHROMA_HOST=chroma\n      - CHROMA_PORT=8000\n      - GOOGLE_API_KEY=${GOOGLE_API_KEY}\n      - CHROMA_COLLECTION_NAME=tutor_space_projects_3072\n      - EMBEDDING_MODEL=models/gemini-embedding-001\n      - EMBEDDING_DIMENSIONS=3072\n      - GEMINI_MODEL=gemini-2.5-pro\n      - RETRIEVAL_DOCUMENT_TASK=RETRIEVAL_DOCUMENT\n      - RETRIEVAL_QUERY_TASK=RETRIEVAL_QUERY\n    volumes:\n      - ./app:/app\n      - ./logs:/app/logs\n      - app_data:/app/data\n    depends_on:\n      chroma:\n        condition: service_healthy\n    restart: unless-stopped\n    networks:\n      - tutor_network\n    healthcheck:\n      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]\n      interval: 30s\n      timeout: 10s\n      retries: 3\n      start_period: 60s\n\n  nginx:\n    image: nginx:alpine\n    container_name: tutor_space_nginx\n    ports:\n      - "80:80"\n      - "443:443"\n    volumes:\n      - ./nginx.conf:/etc/nginx/nginx.conf:ro\n      - ./ssl:/etc/nginx/ssl:ro\n      - nginx_logs:/var/log/nginx\n    depends_on:\n      - app\n    restart: unless-stopped\n    networks:\n      - tutor_network\n\n  redis:\n    image: redis:7-alpine\n    container_name: tutor_space_redis\n    ports:\n      - "6379:6379"\n    volumes:\n      - redis_data:/data\n    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru\n    restart: unless-stopped\n    networks:\n      - tutor_network\n    healthcheck:\n      test: ["CMD", "redis-cli", "ping"]\n      interval: 30s\n      timeout: 10s\n      retries: 3\n\nvolumes:\n  chroma_data:\n    driver: local\n  app_data:\n    driver: local\n  redis_data:\n    driver: local\n  nginx_logs:\n    driver: local\n\nnetworks:\n  tutor_network:\n    ' additional_kwargs={} response_metadata={'id': 'msg_016h3iK1cNtapgzX84JYLsb1', 'model': 'claude-sonnet-4-20250514', 'stop_reason': 'max_tokens', 'stop_sequence': None, 'usage': {'cache_creation_input_tokens': 0, 'cache_read_input_tokens': 0, 'input_tokens': 381, 'output_tokens': 1024, 'service_tier': 'standard'}} id='run--8af6b558-6b34-44d7-9431-7383fc761b7b-0' usage_metadata={'input_tokens': 381, 'output_tokens': 1024, 'total_tokens': 1405, 'input_token_details': {'cache_read': 0, 'cache_creation': 0}}